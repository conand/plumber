import archr
import plumber

# docker build example_1_nonet
# docker run -it --rm <docker_container_id>

def test_leak_detection(leak_input):
    """
    Test that our write what where exploit can leak, and works in the presence of a shadowstack
    """
    argv_sensitive_idx = 1
    argv_sensitive_target = plumber.ArgvSensitiveTarget(argv_sensitive_idx)
    sensitive = [argv_sensitive_target]

    with archr.targets.DockerImageTarget('be3ced322578').build().start() as target:
        p = plumber.Plumber(target, leak_input, sensitive)

    if p.exploitable():
        p.pov()


if __name__ == "__main__":
    import logging
    logging.getLogger('rex').setLevel('DEBUG')
    logging.getLogger("angr.state_plugins.preconstrainer").setLevel("DEBUG")
    logging.getLogger("angr.simos").setLevel("DEBUG")
    logging.getLogger("angr.exploration_techniques.tracer").setLevel("DEBUG")
    logging.getLogger("angr.exploration_techniques.crash_monitor").setLevel("DEBUG")

    leak_input = b"A"*84

    test_leak_detection(leak_input)

